/** @jsx React.DOM */

define ("%(PKG)s/ui/view", ["underscore", "jquery", "react"], function (util, $, React)
{
  function View (%(PKG_VAR)s) {
    var view = this;
    view.local  = %(PKG_VAR)s;
    view.global = %(PKG_VAR)s.global;
    
    %(PKG_VAR)s.register ('view', view);
  }
  
  View.prototype.render = function %(PKG_VAR)s_render (render_config)
  {
    var view = this, %(PKG_VAR)s = this.local;
    
    if (! (render_config.render_target && render_config.render_data))
      throw new Error ("refusing to render view without a target and configuration");
      
    console.assert (render_config.render_data.%(PKG_VAR)s === undefined); // sanity
    render_config.render_data.%(PKG_VAR)s = %(PKG_VAR)s;
    render_config.render_data.view = view;
    
    if (! view.reactComponent)
      view.reactComponent = new view.reactComponentClass (render_config.render_data);
    
    React.renderComponent (view.reactComponent, render_config.render_target);
  };
  
  View.prototype.reactComponentClass = React.createClass ({
    render: function render ()
    {
      var component = this,
             config = component.props,
               view = config.view, %(PKG_VAR)s = config.app;
      
      // this.props contains the render_data passed to the class constructor
      
      return <div> <b> {config.name} </b> </div>;
    },
    componentDidMount: function componentDidMount ()
    {
      var component = this,
             config = component.props,
               view = config.view, %(PKG_VAR)s = config.app;
    },
  });
  
  return View;
});
